version: "3.8"

services:
    redis:
        image: redis:latest
        ports:
            - "6380:6379"
        volumes:
            - redis-data:/data
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 5s
            timeout: 5s
            retries: 5

    rabbitmq:
        image: rabbitmq:3-management
        ports:
            - "5672:5672"
            - "15672:15672" # 관리 UI
        environment:
            RABBITMQ_DEFAULT_USER: guest
            RABBITMQ_DEFAULT_PASS: guest
        volumes:
            - rabbitmq_data:/var/lib/rabbitmq
        healthcheck:
            test: ["CMD", "rabbitmqctl", "status"]
            interval: 10s
            timeout: 5s
            retries: 5

    registry:
        build:
            context: .
            dockerfile: Dockerfile.registry
        ports:
            - "8000:8000"
        environment:
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - AGENT_TTL=30
            - OPENAPI_TITLE=Agent Registry API
            - OPENAPI_DESCRIPTION=에이전트 등록 및 관리를 위한 API 서비스
            - OPENAPI_VERSION=1.0.0
        volumes:
            - ./registry:/app/registry
            - ./common:/app/common
        restart: always
        depends_on:
            redis:
                condition: service_healthy
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
            interval: 10s
            timeout: 5s
            retries: 3

    orchestrator:
        build:
            context: .
            dockerfile: orchestrator/Dockerfile
        ports:
            - "8001:8000"
        environment:
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - REGISTRY_URL=http://registry:8000
            - BROKER_URL=http://broker:8000
        volumes:
            - ./orchestrator:/app/orchestrator
            - ./common:/app/common
        restart: always
        depends_on:
            - registry

    broker:
        build:
            context: .
            dockerfile: ./broker/Dockerfile
        ports:
            - "8002:8000"
        environment:
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - RABBITMQ_HOST=rabbitmq
            - RABBITMQ_PORT=5672
            - REGISTRY_URL=http://registry:8000
        depends_on:
            redis:
                condition: service_healthy
            rabbitmq:
                condition: service_healthy
            registry:
                condition: service_healthy
        restart: always

    agent_web_search:
        build:
            context: .
            dockerfile: ./agents/web_search/Dockerfile
        environment:
            - REGISTRY_URL=http://registry:8000
            - RABBITMQ_HOST=rabbitmq
            - RABBITMQ_PORT=5672
        depends_on:
            registry:
                condition: service_healthy
            rabbitmq:
                condition: service_healthy
        restart: always

    agent_writer:
        build:
            context: .
            dockerfile: ./agents/writer/Dockerfile
        environment:
            - REGISTRY_URL=http://registry:8000
            - RABBITMQ_HOST=rabbitmq
            - RABBITMQ_PORT=5672
        depends_on:
            registry:
                condition: service_healthy
            rabbitmq:
                condition: service_healthy
        restart: always

volumes:
    redis-data:
    rabbitmq_data:

version: "3.9"

services:
    web_search_agent:
        build:
            context: ../
            dockerfile: ./agents/web_search/Dockerfile
        container_name: web_search_agent
        ports:
            - "8010:8000"
        environment:
            - REGISTRY_URL=http://registry:8000
            - RABBITMQ_HOST=rabbitmq
            - RABBITMQ_PORT=5672
            - CONTAINER_NAME=web_search_agent
            - PORT=8000
            - LOG_LEVEL=DEBUG
            - PYTHONPATH=/app
        volumes:
            - ../common:/app/common
            - ./web_search:/app/agent
            - ./start_agents.sh:/app/agent/start.sh
        command:
            [
                "bash",
                "-c",
                "chmod +x /app/agent/start.sh && /app/agent/start.sh",
            ]
        restart: always
        networks:
            - agent-network
            - multiagent-network

    writer_agent:
        build:
            context: ../
            dockerfile: ./agents/writer/Dockerfile
        container_name: writer_agent
        ports:
            - "8011:8000"
        environment:
            - REGISTRY_URL=http://registry:8000
            - RABBITMQ_HOST=rabbitmq
            - RABBITMQ_PORT=5672
            - CONTAINER_NAME=writer_agent
            - PORT=8000
            - LOG_LEVEL=DEBUG
            - PYTHONPATH=/app
            - OPENAI_API_KEY=${OPENAI_API_KEY}
            - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
        volumes:
            - ../common:/app/common
            - ./writer:/app/agent
            - ./start_agents.sh:/app/agent/start.sh
        command:
            [
                "bash",
                "-c",
                "chmod +x /app/agent/start.sh && /app/agent/start.sh",
            ]
        restart: always
        networks:
            - agent-network
            - multiagent-network

    stock_data_agent:
        build:
            context: ../
            dockerfile: ./agents/stock_data_agent/Dockerfile
        container_name: stock_data_agent
        ports:
            - "8014:8000"
        environment:
            - REGISTRY_URL=http://registry:8000
            - RABBITMQ_HOST=rabbitmq
            - RABBITMQ_PORT=5672
            - CONTAINER_NAME=stock_data_agent
            - PORT=8000
            - ALPHA_VANTAGE_API_KEY=${ALPHA_VANTAGE_API_KEY}
            - LOG_LEVEL=DEBUG
            - PYTHONPATH=/app
            - OPENAI_API_KEY=${OPENAI_API_KEY}
            - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
        volumes:
            - ../common:/app/common
            - ./stock_data_agent:/app/agent
            - ./start_agents.sh:/app/agent/start.sh
        command:
            [
                "bash",
                "-c",
                "chmod +x /app/agent/start.sh && /app/agent/start.sh",
            ]
        restart: always
        networks:
            - agent-network
            - multiagent-network

    code_generator_agent:
        build:
            context: ../
            dockerfile: ./agents/code_generator/Dockerfile
        container_name: code_generator_agent
        ports:
            - "8012:8000"
        environment:
            - REGISTRY_URL=http://registry:8000
            - RABBITMQ_HOST=rabbitmq
            - RABBITMQ_PORT=5672
            - CONTAINER_NAME=code_generator_agent
            - PORT=8000
            - LOG_LEVEL=DEBUG
            - PYTHONPATH=/app
            - OPENAI_API_KEY=${OPENAI_API_KEY}
            - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
        volumes:
            - ../common:/app/common
            - ./code_generator:/app/agent
            - ./start_agents.sh:/app/agent/start.sh
        command:
            [
                "bash",
                "-c",
                "chmod +x /app/agent/start.sh && /app/agent/start.sh",
            ]
        restart: always
        networks:
            - agent-network
            - multiagent-network

    example_agent:
        build:
            context: ../
            dockerfile: ./agents/example_agent/Dockerfile
        container_name: example_agent
        ports:
            - "8013:8000"
        environment:
            - REGISTRY_URL=http://registry:8000
            - RABBITMQ_HOST=rabbitmq
            - RABBITMQ_PORT=5672
            - CONTAINER_NAME=example_agent
            - PORT=8000
            - LOG_LEVEL=${LOG_LEVEL:-INFO}
            - PYTHONPATH=/app
            - OPENAI_API_KEY=${OPENAI_API_KEY}
            - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
        volumes:
            - ../common:/app/common
            - ./example_agent:/app/agent
            - ./start_agents.sh:/app/agent/start.sh
        command:
            [
                "bash",
                "-c",
                "chmod +x /app/agent/start.sh && /app/agent/start.sh",
            ]
        restart: always
        networks:
            - agent-network
            - multiagent-network

    react_agent:
        build:
            context: ../
            dockerfile: ./agents/react_agent/Dockerfile
        container_name: react_agent
        ports:
            - "8030:8030"
        volumes:
            - ../common:/app/common:ro
            - ../agents/react_agent:/app/agent:ro
        environment:
            - REGISTRY_URL=http://registry:8000
            - BROKER_URL=http://broker:8000
            - CONTAINER_NAME=react_agent
            - PORT=8030
            - PYTHONPATH=/app
            - LOG_LEVEL=INFO
            - OPENAI_API_KEY=${OPENAI_API_KEY}
            - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
        networks:
            - agent-network
            - multiagent-network
        restart: always

    data_analysis_agent:
        build:
            context: ../
            dockerfile: ./agents/data_analysis_agent/Dockerfile
        container_name: data_analysis_agent
        ports:
            - "8040:8040"
        volumes:
            - ../common:/app/common:ro
            - ../agents/data_analysis_agent:/app/agent:ro
        environment:
            - REGISTRY_URL=http://registry:8000
            - BROKER_URL=http://broker:8000
            - CONTAINER_NAME=data_analysis_agent
            - PORT=8040
            - PYTHONPATH=/app
            - LOG_LEVEL=INFO
        networks:
            - agent-network
            - multiagent-network
        restart: always

    stock_analysis_agent:
        build:
            context: ../
            dockerfile: ./agents/stock_analysis_agent/Dockerfile
        container_name: stock_analysis_agent
        ports:
            - "8015:8000"
        environment:
            - REGISTRY_URL=http://registry:8000
            - RABBITMQ_HOST=rabbitmq
            - RABBITMQ_PORT=5672
            - CONTAINER_NAME=stock_analysis_agent
            - PORT=8000
            - LOG_LEVEL=DEBUG
            - PYTHONPATH=/app
            - OPENAI_API_KEY=${OPENAI_API_KEY}
            - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
        volumes:
            - ../common:/app/common
            - ./stock_analysis_agent:/app/agent
            - ./start_agents.sh:/app/agent/start.sh
        command:
            [
                "bash",
                "-c",
                "chmod +x /app/agent/start.sh && /app/agent/start.sh",
            ]
        restart: always
        networks:
            - agent-network
            - multiagent-network

networks:
    agent-network:
    multiagent-network:
        external: true
